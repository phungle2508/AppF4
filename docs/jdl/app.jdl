// =======================================
// üîê Gateway Application
// =======================================
enum FeedVisibility {
  PUBLIC, PRIVATE, FRIENDS_ONLY
}
application {
  config {
    baseName gateway
    packageName com.f4.gateway
    applicationType gateway
    authenticationType oauth2
    databaseType no
    serverPort 8080
    serviceDiscoveryType consul
    enableSwaggerCodegen true
  }
  entities User, KeycloakUser, Reel, Comment, Like, Notification, FeedItem
}

// =======================================
// üë§ User Microservice
// =======================================
application {
  config {
    baseName ms_user
    packageName com.f4.user
    applicationType microservice
    authenticationType oauth2
    databaseType sql
    devDatabaseType mysql
    prodDatabaseType mysql
    serverPort 8081
    serviceDiscoveryType consul
    enableSwaggerCodegen true
  }
  entities User, KeycloakUser
}

// =======================================
// üìπ Reel Microservice
// =======================================
application {
  config {
    baseName ms_reel
    packageName com.f4.reel
    applicationType microservice
    authenticationType oauth2
    databaseType sql
    devDatabaseType mysql
    prodDatabaseType mysql
    serverPort 8082
    messageBroker kafka
    serviceDiscoveryType consul
    searchEngine elasticsearch
    enableSwaggerCodegen true
  }
  entities Reel
}

// =======================================
// üí¨ Comment & Like Microservice
// =======================================
application {
  config {
    baseName ms_commentlike
    packageName com.f4.commentlike
    applicationType microservice
    authenticationType oauth2
    databaseType sql
    devDatabaseType mysql
    prodDatabaseType mysql
    serverPort 8085
    messageBroker kafka
    serviceDiscoveryType consul
    enableSwaggerCodegen true
  }
  entities Comment, Like
}

// =======================================
// üîî Notification Microservice
// =======================================
application {
  config {
    baseName ms_notification
    packageName com.f4.notification
    applicationType microservice
    authenticationType oauth2
    databaseType sql
    devDatabaseType mysql
    prodDatabaseType mysql
    serverPort 8083
    messageBroker kafka
    serviceDiscoveryType consul
    enableSwaggerCodegen true
    cacheProvider redis
  }
  entities Notification
}

// =======================================
// üì∞ Feed Microservice
// =======================================
application {
  config {
    baseName ms_feed
    packageName com.f4.feed
    applicationType microservice
    authenticationType oauth2
    databaseType sql
    devDatabaseType mysql
    prodDatabaseType mysql
    serverPort 8084
    messageBroker kafka
    serviceDiscoveryType consul
    searchEngine elasticsearch
    enableSwaggerCodegen true
    cacheProvider redis
  }
  entities FeedItem
}

// =======================================
// üì¶ Entities
// =======================================
entity User {
  id UUID required
  username String required unique
  email String required unique
  passwordHash String required
  createdAt Instant required
  keycloakUserId UUID required
}
entity KeycloakUser {
  id UUID required
  username String required unique
  email String required unique
  realmId UUID required
  userId UUID required
}
entity Reel {
  id UUID required
  userId UUID required
  title String required
  videoUrl String required
  createdAt Instant required
}
entity Comment {
  id UUID required
  parentType String required
  parentId UUID required
  userId UUID required
  content TextBlob required
  createdAt Instant required
}
entity Like {
  id UUID required
  parentType String required
  parentId UUID required
  userId UUID required
  createdAt Instant required
}
entity Notification {
  id UUID required
  recipientId UUID required
  type String required
  message TextBlob required
  isRead Boolean required
  createdAt Instant required
}
entity FeedItem {
  id UUID required
  userId UUID required

  // New fields based on your updated structure
  content TextBlob
  imageUrl String
  videoUrl String
  visibility FeedVisibility 
  location String 
  likesCount Integer
  commentsCount Integer
  sharesCount Integer
  createdAt Instant required
  updatedAt Instant required
}
// =======================================
// ‚öôÔ∏è Entity-to-Microservice Mapping
// =======================================
microservice User, KeycloakUser with ms_user
microservice Reel with ms_reel
microservice Comment, Like with ms_commentlike
microservice Notification with ms_notification
microservice FeedItem with ms_feed
// =======================================
// üîÅ Global Options
// =======================================
dto * with mapstruct
service * with serviceImpl
paginate Reel, Comment, Like, Notification, FeedItem with infinite-scroll
search Reel, FeedItem with elasticsearch
// =======================================
// üöÄ Deployment Config
// =======================================
deployment {
  deploymentType docker-compose
  serviceDiscoveryType consul
  appsFolders [gateway, ms_user, ms_reel, ms_commentlike, ms_notification, ms_feed]
  dockerRepositoryName "f4"
  monitoring prometheus
}
