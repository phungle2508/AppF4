@startuml
'─────────────────────────────────────────────────────
skinparam backgroundColor         #FAFAFA
skinparam componentStyle          rectangle
skinparam shadowing               true
skinparam roundcorner             15
skinparam linetype                ortho
skinparam ArrowColor              #333333
skinparam componentBorderColor    #555555
skinparam packageBorderColor      #222222
skinparam packageBackgroundColor  #EFEFEF
'─────────────────────────────────────────────────────

title Detailed Kafka Topology: Topics, Partitions & Consumer Groups

'── Producers ─────────────────────────────────────────
package "Producers" {
  component "Reel Service"                 as RS #ADD1B2
  component "Like/Comment Service"         as LCS #ADD1B2
}

'── Kafka Cluster ────────────────────────────────────
package "Kafka Cluster" {
  
  package "Topic: reel-events\n(partitions=3)"  #D3E4CD {
    component "Partition 0" as R0
    component "Partition 1" as R1
    component "Partition 2" as R2
  }

  package "Topic: like-events\n(partitions=2)"  #D3E4CD {
    component "Partition 0" as L0
    component "Partition 1" as L1
  }

  package "Topic: comment-events\n(partitions=2)" #D3E4CD {
    component "Partition 0" as C0
    component "Partition 1" as C1
  }
}

'── Consumer Groups ─────────────────────────────────
package "Consumer Groups" {
  
  package "feed-group"   #FBE4A9 {
    component "Feed#1\n(partitions: R0,R2,L0,C0)" as FG1
    component "Feed#2\n(partitions: R1,L1,C1)"     as FG2
  }

  package "notify-group" #FBE4A9 {
    component "Notify#1\n(partitions: R0,L0,C0)"    as NG1
    component "Notify#2\n(partitions: R1,R2,L1,C1)" as NG2
  }
}

'─────────────────────────────────────────────────────
' Produce arrows (with “mod” logic spelled out)
RS  --> R0  : reel.posted\n(key mod 3 == 0)
RS  --> R1  : reel.posted\n(key mod 3 == 1)
RS  --> R2  : reel.posted\n(key mod 3 == 2)

LCS --> L0  : reel.liked\n(key mod 2 == 0)
LCS --> L1  : reel.liked\n(key mod 2 == 1)
LCS --> C0  : reel.commented\n(key mod 2 == 0)
LCS --> C1  : reel.commented\n(key mod 2 == 1)

' Feed-group consumption
R0  --> FG1 : consume & commit
R2  --> FG1
R1  --> FG2

L0  --> FG1
L1  --> FG2

C0  --> FG1
C1  --> FG2

' Notify-group consumption
R0  --> NG1 : consume & commit
R1  --> NG2
R2  --> NG2

L0  --> NG1
L1  --> NG2

C0  --> NG1
C1  --> NG2
@enduml
